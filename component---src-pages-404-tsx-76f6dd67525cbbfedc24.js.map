{"version":3,"file":"component---src-pages-404-tsx-76f6dd67525cbbfedc24.js","mappings":"gLAKA,MAAMA,GAAS,E,QAAA,IAAW,CAACC,EAAOC,KAAwB,IAAAC,KAAI,IAAO,CAAEC,MAAO,YAAaH,EAAOI,UAAW,SAAUH,UACvHF,EAAOM,YAAc,Q,mJCDrB,MAAMC,GAAS,OAAO,MAAO,CAC3BC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,YAGpBJ,EAAOD,YAAc,SACrB,MAAMM,EAAe,CACnBC,WAAY,CACVC,WAAY,MACZC,UAAW,oBAEbC,SAAU,CACRC,IAAK,MACLF,UAAW,oBAEbG,KAAM,CACJJ,WAAY,MACZG,IAAK,MACLF,UAAW,2BAGQ,QACrB,SAAyBd,EAAOC,GAC9B,MAAM,KAAEiB,EAAO,UAAWC,GAASnB,EACnC,OAAuB,IAAAE,KACrB,IAAOkB,IACP,CACEnB,MACAoB,MAAOV,EAAaO,MACjBC,EACHG,SAAU,YAGhB,I,uGCgDF,MAvE0CC,KAExC,MAAMC,GAAcC,EAAAA,EAAAA,IAAkB,QAAS,YACzCC,GAAeD,EAAAA,EAAAA,IAAkB,cAAe,eAChDE,GAAYF,EAAAA,EAAAA,IAAkB,WAAY,YAC1CG,GAAeH,EAAAA,EAAAA,IAAkB,WAAY,SACnD,OACEI,EAAAA,cAACC,EAAAA,EAAS,CAACC,KAAK,gBACdF,EAAAA,cAACvB,EAAM,KACLuB,EAAAA,cAAC9B,EAAAA,EAAM,CACLiC,GAAIR,EACJS,EAAG,CAAEC,KAAM,EAAGC,GAAI,IAClBC,aAAa,KACbC,UAAU,KACVC,QAAS,EACTC,EAAE,QAGFV,EAAAA,cAACW,EAAAA,EAAI,CAACpC,UAAU,SAASD,MAAM,SAASsC,QAAQ,SAASC,UAAU,UACjEb,EAAAA,cAACc,EAAAA,EAAI,CAACC,GAAIC,EAAAA,IAAuBN,EAAG,GAAIO,EAAG,GAAIC,MAAOrB,EAAcsB,GAAI,IACxEnB,EAAAA,cAACoB,EAAAA,EAAO,CAACL,GAAG,KAAKM,SAAU,CAAEhB,KAAM,MAAOC,GAAI,OAASa,GAAI,EAAGD,MAAOnB,GAAc,OAGnFC,EAAAA,cAACoB,EAAAA,EAAO,CACNL,GAAG,KACHM,SAAU,CAAEhB,KAAM,KAAMC,GAAI,OAC5Ba,GAAI,EACJG,WAAW,SACXJ,MAAOnB,GACR,kBAGDC,EAAAA,cAACuB,EAAAA,EAAI,CAACF,SAAS,KAAKnB,KAAK,KAAKW,UAAU,SAASK,MAAOpB,GAAW,8DAMpE0B,EAgBDxB,EAAAA,cAACyB,EAAAA,EAAK,CACJlD,UAAW,CAAE8B,KAAM,SAAUqB,GAAI,OACjCjB,QAAS,EACTkB,GAAI,EACJC,MAAM,OACNhB,QAAQ,UAERZ,EAAAA,cAAC6B,EAAAA,EAAM,CAACd,GAAIe,EAAAA,GAAMC,GAAG,IAAIC,KAAK,KAAKC,SAAUjC,EAAAA,cAACkC,EAAAA,IAAM,MAAKC,GAAI,GAAG,mBAM5D,EAMT,MAAMC,EAAeA,IAAMpC,EAAAA,cAAA,aAAO,2C,sHClFzC,MAAMoB,GAAU,QACd,SAAkBjD,EAAOC,GACvB,MAAMiE,GAAS,OAAe,UAAWlE,IACnC,UAAEmE,KAAchD,IAAS,OAAiBnB,GAChD,OAAuB,IAAAE,KACrB,IAAOkE,GACP,CACEnE,MACAkE,WAAW,IAAAE,IAAG,iBAAkBrE,EAAMmE,cACnChD,EACHE,MAAO6C,GAGb,IAEFjB,EAAQ5C,YAAc,S","sources":["webpack://chakrathemes.com/./node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs","webpack://chakrathemes.com/./node_modules/@chakra-ui/react/dist/esm/center/center.mjs","webpack://chakrathemes.com/./src/pages/404.tsx","webpack://chakrathemes.com/./node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport { VStack };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nconst AbsoluteCenter = forwardRef(\n  function AbsoluteCenter2(props, ref) {\n    const { axis = \"both\", ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        __css: centerStyles[axis],\n        ...rest,\n        position: \"absolute\"\n      }\n    );\n  }\n);\n\nexport { AbsoluteCenter, Center };\n","import {\n  Box,\n  Button,\n  Center,\n  Container,\n  Flex,\n  Heading,\n  Icon,\n  Stack,\n  Text,\n  VStack,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { HeadFC, Link, PageProps } from \"gatsby\";\nimport * as React from \"react\";\nimport { FaExclamationTriangle, FaHome } from \"react-icons/fa\";\n\nconst NotFoundPage: React.FC<PageProps> = () => {\n  // Theme colors\n  const cardBgColor = useColorModeValue(\"white\", \"gray.800\");\n  const primaryColor = useColorModeValue(\"primary.500\", \"primary.400\");\n  const textColor = useColorModeValue(\"gray.600\", \"gray.400\");\n  const headingColor = useColorModeValue(\"gray.800\", \"white\");\n  return (\n    <Container maxW=\"container.md\">\n      <Center>\n        <VStack\n          bg={cardBgColor}\n          p={{ base: 8, md: 12 }}\n          borderRadius=\"xl\"\n          boxShadow=\"xl\"\n          spacing={8}\n          w=\"full\"\n        >\n          {/* Icon and Heading */}\n          <Flex direction=\"column\" align=\"center\" justify=\"center\" textAlign=\"center\">\n            <Icon as={FaExclamationTriangle} w={20} h={20} color={primaryColor} mb={6} />\n            <Heading as=\"h1\" fontSize={{ base: \"4xl\", md: \"5xl\" }} mb={2} color={headingColor}>\n              404\n            </Heading>\n            <Heading\n              as=\"h2\"\n              fontSize={{ base: \"xl\", md: \"2xl\" }}\n              mb={6}\n              fontWeight=\"normal\"\n              color={headingColor}\n            >\n              Page Not Found\n            </Heading>\n            <Text fontSize=\"lg\" maxW=\"md\" textAlign=\"center\" color={textColor}>\n              Oops! The page you're looking for doesn't seem to exist.\n            </Text>\n          </Flex>\n\n          {/* Developer message in development */}\n          {process.env.NODE_ENV === \"development\" && (\n            <Box\n              bg={useColorModeValue(\"blue.50\", \"blue.900\")}\n              p={4}\n              borderRadius=\"md\"\n              borderLeft=\"4px solid\"\n              borderColor=\"blue.500\"\n              maxW=\"full\"\n            >\n              <Text color={useColorModeValue(\"blue.700\", \"blue.100\")} fontSize=\"sm\">\n                Developer Note: You can create new pages in the <code>src/pages/</code> directory.\n              </Text>\n            </Box>\n          )}\n\n          {/* Navigation options */}\n          <Stack\n            direction={{ base: \"column\", sm: \"row\" }}\n            spacing={4}\n            mt={6}\n            width=\"full\"\n            justify=\"center\"\n          >\n            <Button as={Link} to=\"/\" size=\"lg\" leftIcon={<FaHome />} px={8}>\n              Back to Home\n            </Button>\n          </Stack>\n        </VStack>\n      </Center>\n    </Container>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const Head: HeadFC = () => <title>Page Not Found | Chakra UI Themes Editor</title>;\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Heading = forwardRef(\n  function Heading2(props, ref) {\n    const styles = useStyleConfig(\"Heading\", props);\n    const { className, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(\n      chakra.h2,\n      {\n        ref,\n        className: cx(\"chakra-heading\", props.className),\n        ...rest,\n        __css: styles\n      }\n    );\n  }\n);\nHeading.displayName = \"Heading\";\n\nexport { Heading };\n"],"names":["VStack","props","ref","jsx","align","direction","displayName","Center","baseStyle","display","alignItems","justifyContent","centerStyles","horizontal","insetStart","transform","vertical","top","both","axis","rest","div","__css","position","NotFoundPage","cardBgColor","useColorModeValue","primaryColor","textColor","headingColor","React","Container","maxW","bg","p","base","md","borderRadius","boxShadow","spacing","w","Flex","justify","textAlign","Icon","as","FaExclamationTriangle","h","color","mb","Heading","fontSize","fontWeight","Text","process","Stack","sm","mt","width","Button","Link","to","size","leftIcon","FaHome","px","Head","styles","className","h2","cx"],"sourceRoot":""}